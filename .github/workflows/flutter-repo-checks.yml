name: CI / Flutter Repo — Format • Analyze • Test • Coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  repo-checks:
    name: Repo checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java (for Flutter tooling on Linux)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Generate code (build_runner)
        # runs code generation: hive adapters, json_serializable, etc.
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Dart format check
        # fails the job if code is not formatted
        run: dart format --set-exit-if-changed .

      - name: Static analysis
        run: flutter analyze

      - name: Run unit & widget tests
        run: |
          mkdir -p ci-artifacts
          flutter test --coverage --machine > ci-artifacts/flutter_test_machine_output.json
        env:
          FLUTTER_TEST_TIMEOUT: 300000

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: Upload test logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: ci-artifacts